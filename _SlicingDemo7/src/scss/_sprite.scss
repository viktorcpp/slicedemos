// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$ico-footer-socials-fb-name: 'ico-footer-socials-fb';
$ico-footer-socials-fb-x: 0px;
$ico-footer-socials-fb-y: 112px;
$ico-footer-socials-fb-offset-x: 0px;
$ico-footer-socials-fb-offset-y: -112px;
$ico-footer-socials-fb-width: 21px;
$ico-footer-socials-fb-height: 35px;
$ico-footer-socials-fb-total-width: 166px;
$ico-footer-socials-fb-total-height: 147px;
$ico-footer-socials-fb-image: '../images/sprite.png';
$ico-footer-socials-fb: (0px, 112px, 0px, -112px, 21px, 35px, 166px, 147px, '../images/sprite.png', 'ico-footer-socials-fb', );
$ico-footer-socials-tw-name: 'ico-footer-socials-tw';
$ico-footer-socials-tw-x: 112px;
$ico-footer-socials-tw-y: 56px;
$ico-footer-socials-tw-offset-x: -112px;
$ico-footer-socials-tw-offset-y: -56px;
$ico-footer-socials-tw-width: 36px;
$ico-footer-socials-tw-height: 28px;
$ico-footer-socials-tw-total-width: 166px;
$ico-footer-socials-tw-total-height: 147px;
$ico-footer-socials-tw-image: '../images/sprite.png';
$ico-footer-socials-tw: (112px, 56px, -112px, -56px, 36px, 28px, 166px, 147px, '../images/sprite.png', 'ico-footer-socials-tw', );
$ico-stats-01-name: 'ico-stats-01';
$ico-stats-01-x: 0px;
$ico-stats-01-y: 0px;
$ico-stats-01-offset-x: 0px;
$ico-stats-01-offset-y: 0px;
$ico-stats-01-width: 54px;
$ico-stats-01-height: 54px;
$ico-stats-01-total-width: 166px;
$ico-stats-01-total-height: 147px;
$ico-stats-01-image: '../images/sprite.png';
$ico-stats-01: (0px, 0px, 0px, 0px, 54px, 54px, 166px, 147px, '../images/sprite.png', 'ico-stats-01', );
$ico-stats-02-name: 'ico-stats-02';
$ico-stats-02-x: 56px;
$ico-stats-02-y: 0px;
$ico-stats-02-offset-x: -56px;
$ico-stats-02-offset-y: 0px;
$ico-stats-02-width: 54px;
$ico-stats-02-height: 54px;
$ico-stats-02-total-width: 166px;
$ico-stats-02-total-height: 147px;
$ico-stats-02-image: '../images/sprite.png';
$ico-stats-02: (56px, 0px, -56px, 0px, 54px, 54px, 166px, 147px, '../images/sprite.png', 'ico-stats-02', );
$ico-stats-03-name: 'ico-stats-03';
$ico-stats-03-x: 0px;
$ico-stats-03-y: 56px;
$ico-stats-03-offset-x: 0px;
$ico-stats-03-offset-y: -56px;
$ico-stats-03-width: 54px;
$ico-stats-03-height: 54px;
$ico-stats-03-total-width: 166px;
$ico-stats-03-total-height: 147px;
$ico-stats-03-image: '../images/sprite.png';
$ico-stats-03: (0px, 56px, 0px, -56px, 54px, 54px, 166px, 147px, '../images/sprite.png', 'ico-stats-03', );
$ico-stats-04-name: 'ico-stats-04';
$ico-stats-04-x: 56px;
$ico-stats-04-y: 56px;
$ico-stats-04-offset-x: -56px;
$ico-stats-04-offset-y: -56px;
$ico-stats-04-width: 54px;
$ico-stats-04-height: 54px;
$ico-stats-04-total-width: 166px;
$ico-stats-04-total-height: 147px;
$ico-stats-04-image: '../images/sprite.png';
$ico-stats-04: (56px, 56px, -56px, -56px, 54px, 54px, 166px, 147px, '../images/sprite.png', 'ico-stats-04', );
$ico-stats-05-name: 'ico-stats-05';
$ico-stats-05-x: 112px;
$ico-stats-05-y: 0px;
$ico-stats-05-offset-x: -112px;
$ico-stats-05-offset-y: 0px;
$ico-stats-05-width: 54px;
$ico-stats-05-height: 54px;
$ico-stats-05-total-width: 166px;
$ico-stats-05-total-height: 147px;
$ico-stats-05-image: '../images/sprite.png';
$ico-stats-05: (112px, 0px, -112px, 0px, 54px, 54px, 166px, 147px, '../images/sprite.png', 'ico-stats-05', );
$spritesheet-width: 166px;
$spritesheet-height: 147px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($ico-footer-socials-fb, $ico-footer-socials-tw, $ico-stats-01, $ico-stats-02, $ico-stats-03, $ico-stats-04, $ico-stats-05, );
$spritesheet: (166px, 147px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
